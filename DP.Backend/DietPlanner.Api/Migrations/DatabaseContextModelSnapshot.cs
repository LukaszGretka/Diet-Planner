// <auto-generated />
using System;
using DietPlanner.Api.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DietPlanner.Api.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.9");

            modelBuilder.Entity("DietPlanner.Api.Models.BodyProfile.DbModel.UserMeasurement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Belly")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("BicepsLeft")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("BicepsRight")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("CalfLeft")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("CalfRight")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Chest")
                        .HasColumnType("TEXT");

                    b.Property<string>("Date")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("ForearmLeft")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("ForearmRight")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("ThighLeft")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("ThighRight")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Waist")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Weight")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("UserMeasurements");
                });

            modelBuilder.Entity("DietPlanner.Api.Models.MealsCalendar.DbModel.MealProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("MealId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("PortionMultiplier")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValue(1m);

                    b.Property<int?>("ProductId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("MealId");

                    b.HasIndex("ProductId");

                    b.ToTable("MealProducts");
                });

            modelBuilder.Entity("DietPlanner.Api.Models.MealsCalendar.DbModel.MealType", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("MealTypes");
                });

            modelBuilder.Entity("DietPlanner.Api.Models.MealsCalendar.DbModel.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long?>("BarCode")
                        .HasColumnType("INTEGER");

                    b.Property<float?>("Calories")
                        .HasColumnType("REAL");

                    b.Property<float?>("Carbohydrates")
                        .HasColumnType("REAL");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<float?>("Fats")
                        .HasColumnType("REAL");

                    b.Property<string>("ImagePath")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<float?>("Proteins")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Product");
                });

            modelBuilder.Entity("DietPlanner.Api.Models.MealsCalendar.DbModel.UserMeal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Date")
                        .HasColumnType("TEXT");

                    b.Property<int>("MealTypeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("UserMeals");
                });

            modelBuilder.Entity("DietPlanner.Api.Models.MealsCalendar.DbModel.UserProduct", b =>
                {
                    b.HasBaseType("DietPlanner.Api.Models.MealsCalendar.DbModel.Product");

                    b.Property<bool>("ExposedForOtherUsers")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserId")
                        .HasColumnType("TEXT");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasDiscriminator().HasValue("UserProduct");
                });

            modelBuilder.Entity("DietPlanner.Api.Models.MealsCalendar.DbModel.MealProduct", b =>
                {
                    b.HasOne("DietPlanner.Api.Models.MealsCalendar.DbModel.UserMeal", "Meal")
                        .WithMany()
                        .HasForeignKey("MealId");

                    b.HasOne("DietPlanner.Api.Models.MealsCalendar.DbModel.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId");

                    b.Navigation("Meal");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("DietPlanner.Api.Models.MealsCalendar.DbModel.MealType", b =>
                {
                    b.HasOne("DietPlanner.Api.Models.MealsCalendar.DbModel.UserMeal", "Meal")
                        .WithOne("MealType")
                        .HasForeignKey("DietPlanner.Api.Models.MealsCalendar.DbModel.MealType", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Meal");
                });

            modelBuilder.Entity("DietPlanner.Api.Models.MealsCalendar.DbModel.UserMeal", b =>
                {
                    b.Navigation("MealType");
                });
#pragma warning restore 612, 618
        }
    }
}
