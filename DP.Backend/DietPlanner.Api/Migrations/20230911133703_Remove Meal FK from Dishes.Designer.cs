// <auto-generated />
using System;
using DietPlanner.Api.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DietPlanner.Api.Migrations
{
    [DbContext(typeof(DietPlannerDbContext))]
    [Migration("20230911133703_Remove Meal FK from Dishes")]
    partial class RemoveMealFKfromDishes
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.9");

            modelBuilder.Entity("DietPlanner.Api.Database.Models.Dish", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("ExposedForOtherUsers")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ImagePath")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("Dishes");
                });

            modelBuilder.Entity("DietPlanner.Api.Database.Models.DishProducts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("DishId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("PortionMultiplier")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValue(1m);

                    b.Property<int?>("ProductId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("DishId");

                    b.HasIndex("ProductId");

                    b.ToTable("DishProducts");
                });

            modelBuilder.Entity("DietPlanner.Api.Database.Models.Meal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Date")
                        .HasColumnType("TEXT");

                    b.Property<int>("MealType")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Meals");
                });

            modelBuilder.Entity("DietPlanner.Api.Database.Models.MealDish", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("DishId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MealId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("DishId");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("MealId");

                    b.ToTable("MealDishes");
                });

            modelBuilder.Entity("DietPlanner.Api.Database.Models.Measurement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Belly")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("BicepsLeft")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("BicepsRight")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("CalfLeft")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("CalfRight")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Chest")
                        .HasColumnType("TEXT");

                    b.Property<string>("Date")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("ForearmLeft")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("ForearmRight")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("ThighLeft")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("ThighRight")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Waist")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Weight")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("Measurements");
                });

            modelBuilder.Entity("DietPlanner.Api.Models.MealsCalendar.DbModel.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long?>("BarCode")
                        .HasColumnType("INTEGER");

                    b.Property<float?>("Calories")
                        .HasColumnType("REAL");

                    b.Property<float?>("Carbohydrates")
                        .HasColumnType("REAL");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<float?>("Fats")
                        .HasColumnType("REAL");

                    b.Property<string>("ImagePath")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<float?>("Proteins")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("Products");
                });

            modelBuilder.Entity("DietPlanner.Api.Database.Models.DishProducts", b =>
                {
                    b.HasOne("DietPlanner.Api.Database.Models.Dish", "Dish")
                        .WithMany("DishProducts")
                        .HasForeignKey("DishId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DietPlanner.Api.Models.MealsCalendar.DbModel.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId");

                    b.Navigation("Dish");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("DietPlanner.Api.Database.Models.MealDish", b =>
                {
                    b.HasOne("DietPlanner.Api.Database.Models.Dish", "Dishes")
                        .WithMany()
                        .HasForeignKey("DishId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DietPlanner.Api.Database.Models.Meal", "Meal")
                        .WithMany("MealDishes")
                        .HasForeignKey("MealId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dishes");

                    b.Navigation("Meal");
                });

            modelBuilder.Entity("DietPlanner.Api.Database.Models.Dish", b =>
                {
                    b.Navigation("DishProducts");
                });

            modelBuilder.Entity("DietPlanner.Api.Database.Models.Meal", b =>
                {
                    b.Navigation("MealDishes");
                });
#pragma warning restore 612, 618
        }
    }
}
